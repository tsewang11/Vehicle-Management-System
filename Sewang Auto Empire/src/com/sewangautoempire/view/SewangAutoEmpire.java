/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.sewangautoempire.view;

import com.sewangautoempire.controller.BinarySearch;
import com.sewangautoempire.controller.MergeSort;
import com.sewangautoempire.model.Model;
import com.sewangautoempire.utils.StringUtil;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author kargo
 */
    public class SewangAutoEmpire extends javax.swing.JFrame {

    ArrayList<Model> model_arraylist = new ArrayList();

    /**
     * Creates new form SewangAutoEmpire
     */
    public SewangAutoEmpire() {
        initComponents();
        this.setLocationRelativeTo(null);
        //setExtendedState(JFrame.MAXIMIZED_BOTH);
        addPanel.setVisible(false);
        mainPanel.setVisible(false);
        deleteForm.setVisible(false);
        updatePanel.setVisible(false);
        homePanel.setBounds(0, 0, 945, 700);
        mainPanel.setBounds(0, 0, 945, 700);
        addPanel.setBounds(0, 0, 945, 700);
        ButtonGroup rbGroup = new ButtonGroup();
        rbGroup.add(rbAutomatic);
        rbGroup.add(rbManual);

        for (int i = 0; i < mainTable.getRowCount(); i++) {
            int sn = Integer.parseInt(mainTable.getValueAt(i, 0).toString());
            String carId = (String) mainTable.getValueAt(i, 1);
            String classID = (String) mainTable.getValueAt(i, 2);
            String model = (String) mainTable.getValueAt(i, 3);
            String bodyStyle = (String) mainTable.getValueAt(i, 4);
            String engineType = (String) mainTable.getValueAt(i, 5);
            String transmission = (String) mainTable.getValueAt(i,6);
            if (rbAutomatic.isSelected()) {
                transmission = rbAutomatic.getText();
            } else if (rbManual.isSelected()) {
                transmission = rbManual.getText();
            }
            
            int hp = Integer.parseInt(String.valueOf(mainTable.getValueAt(i, 7)));
            String driveSystem = (String) mainTable.getValueAt(i, 8);
            String color = (String) mainTable.getValueAt(i, 9);
            int makeYear = Integer.parseInt(String.valueOf(mainTable.getValueAt(i, 10)));
            int seater = Integer.parseInt(String.valueOf(mainTable.getValueAt(i, 11)));
            int price = Integer.parseInt(String.valueOf(mainTable.getValueAt(i, 12)));
            Model model1 = new Model(sn, carId, classID, model, bodyStyle, engineType, transmission,
                    hp, driveSystem, color, makeYear, seater, price);
            model_arraylist.add(model1);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        tablePane = new javax.swing.JScrollPane();
        mainTable = new javax.swing.JTable();
        add = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        logo = new javax.swing.JLabel();
        tfSearch = new javax.swing.JTextField();
        lSearch = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        cbCarID = new javax.swing.JComboBox<>();
        lsortBy = new javax.swing.JLabel();
        cbLowHigh = new javax.swing.JComboBox<>();
        update = new javax.swing.JButton();
        updatePanel = new javax.swing.JPanel();
        lCarIDMain = new javax.swing.JLabel();
        tfMainCarId = new javax.swing.JTextField();
        enterButton = new javax.swing.JButton();
        sort = new javax.swing.JButton();
        cbSearchBy = new javax.swing.JComboBox<>();
        homePanel = new javax.swing.JPanel();
        homeTitleLabel = new javax.swing.JLabel();
        homeOkButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        homeTitleLabel1 = new javax.swing.JLabel();
        homeTitleLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        addPanel = new javax.swing.JPanel();
        cbDriveSystem = new javax.swing.JComboBox<>();
        lColor = new javax.swing.JLabel();
        lMakeYear = new javax.swing.JLabel();
        cbMakeYear = new javax.swing.JComboBox<>();
        lSeater = new javax.swing.JLabel();
        lPrice = new javax.swing.JLabel();
        tfClass = new javax.swing.JTextField();
        tfPrice = new javax.swing.JTextField();
        lModel = new javax.swing.JLabel();
        formAddButton = new javax.swing.JButton();
        tfModel = new javax.swing.JTextField();
        formClearButton1 = new javax.swing.JButton();
        cbBodyType = new javax.swing.JComboBox<>();
        lBody = new javax.swing.JLabel();
        lEngine = new javax.swing.JLabel();
        cbEngine = new javax.swing.JComboBox<>();
        lTransmission = new javax.swing.JLabel();
        lHp = new javax.swing.JLabel();
        formBackButton1 = new javax.swing.JButton();
        lclass = new javax.swing.JLabel();
        tfHp = new javax.swing.JTextField();
        lDriveSystem = new javax.swing.JLabel();
        gWagon = new javax.swing.JLabel();
        cbColor = new javax.swing.JComboBox<>();
        updateButton = new javax.swing.JButton();
        logoAdd = new javax.swing.JLabel();
        lCarID = new javax.swing.JLabel();
        tfCarID = new javax.swing.JTextField();
        cbSeater = new javax.swing.JComboBox<>();
        rbAutomatic = new javax.swing.JRadioButton();
        rbManual = new javax.swing.JRadioButton();
        deleteForm = new javax.swing.JPanel();
        tfdeleteFormCarID = new javax.swing.JTextField();
        deleteFormClearButton = new javax.swing.JButton();
        deleteFormBackButton = new javax.swing.JButton();
        ldeleteFormSN = new javax.swing.JLabel();
        deleteFormDeleteButton = new javax.swing.JButton();
        car = new javax.swing.JLabel();
        logoDelete = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(1, 42, 74));
        setBounds(new java.awt.Rectangle(0, 0, 945, 700));
        setPreferredSize(new java.awt.Dimension(945, 700));
        setResizable(false);
        getContentPane().setLayout(null);

        mainPanel.setBackground(new java.awt.Color(1, 58, 99));
        mainPanel.setForeground(new java.awt.Color(255, 255, 255));
        mainPanel.setPreferredSize(new java.awt.Dimension(945, 700));
        mainPanel.setLayout(null);

        title.setFont(new java.awt.Font("Segoe UI Black", 0, 36)); // NOI18N
        title.setForeground(new java.awt.Color(255, 255, 255));
        title.setText("Sewang Auto Empire");
        mainPanel.add(title);
        title.setBounds(250, 40, 410, 71);

        mainTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                { new Integer(1), "ABC123", "E", "E 53 4MATIC+", "Sedan", "Petrol", "Manual",  new Integer(435), "AWD", "White",  new Integer(2023),  new Integer(5),  new Integer(123000)},
                { new Integer(2), "XYZ789", "G", "G 63", "SUV", "Diseal", "Automatic",  new Integer(585), "4WD", "Black",  new Integer(2022),  new Integer(5),  new Integer(150000)},
                { new Integer(3), "DEF456", "C", "C 43 4MATIC", "Sedan", "Petrol", "Automatic",  new Integer(408), "FWD", "Blue",  new Integer(2020),  new Integer(5),  new Integer(98000)},
                { new Integer(4), "MKH218", "S", "SL 43", "Roadster", "Petrol", "Manual",  new Integer(381), "RWD", "Red",  new Integer(2023),  new Integer(5),  new Integer(145000)},
                { new Integer(2), "SDK913", "A", "A 35 4MATIC", "Hatchback", "Petrol", "Automatic",  new Integer(306), "FWD", "White",  new Integer(2022),  new Integer(5),  new Integer(119000)},
                { new Integer(6), "THW153", "E", "E 52 4MATIC+", "Cabriolet", "Diseal", "Automatic",  new Integer(435), "RWD", "Black",  new Integer(2020),  new Integer(4),  new Integer(99000)},
                { new Integer(7), "GHG743", "EQE", "GLS 63 4MATIC+", "SUV", "Electric", "Automatic",  new Integer(612), "AWD", "Grey",  new Integer(2023),  new Integer(5),  new Integer(94000)},
                { new Integer(8), "WED41", "S", "S 63 E Perfoemance", "Sedan", "Electric", "Manual",  new Integer(802), "RWD", "White",  new Integer(2022),  new Integer(4),  new Integer(180000)},
                { new Integer(9), "FDN436", "C", "C 63 S E Performance", "Sedan ", "Eletric", "Automatic ",  new Integer(408), "FWD", "Red",  new Integer(2019),  new Integer(4),  new Integer(118000)},
                { new Integer(10), "GNC8123", "AMG", "ONE", "Coupe", "Petrol", "Manual",  new Integer(1063), "AWD", "Grey",  new Integer(2023),  new Integer(2),  new Integer(2000000)}
            },
            new String [] {
                "S.No", "CarID", "Class", "Model", "Body Style", " Engine Type", "Transmission", "HP", "Drive System", "Color", "Make Year", "Seater", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        mainTable.setShowGrid(false);
        mainTable.getTableHeader().setReorderingAllowed(false);
        tablePane.setViewportView(mainTable);
        if (mainTable.getColumnModel().getColumnCount() > 0) {
            mainTable.getColumnModel().getColumn(0).setResizable(false);
            mainTable.getColumnModel().getColumn(0).setPreferredWidth(30);
            mainTable.getColumnModel().getColumn(1).setResizable(false);
            mainTable.getColumnModel().getColumn(1).setPreferredWidth(53);
            mainTable.getColumnModel().getColumn(2).setResizable(false);
            mainTable.getColumnModel().getColumn(2).setPreferredWidth(55);
            mainTable.getColumnModel().getColumn(3).setResizable(false);
            mainTable.getColumnModel().getColumn(3).setPreferredWidth(120);
            mainTable.getColumnModel().getColumn(4).setResizable(false);
            mainTable.getColumnModel().getColumn(4).setPreferredWidth(55);
            mainTable.getColumnModel().getColumn(5).setResizable(false);
            mainTable.getColumnModel().getColumn(6).setResizable(false);
            mainTable.getColumnModel().getColumn(6).setPreferredWidth(75);
            mainTable.getColumnModel().getColumn(7).setResizable(false);
            mainTable.getColumnModel().getColumn(7).setPreferredWidth(35);
            mainTable.getColumnModel().getColumn(8).setResizable(false);
            mainTable.getColumnModel().getColumn(8).setPreferredWidth(70);
            mainTable.getColumnModel().getColumn(9).setResizable(false);
            mainTable.getColumnModel().getColumn(9).setPreferredWidth(50);
            mainTable.getColumnModel().getColumn(10).setResizable(false);
            mainTable.getColumnModel().getColumn(10).setPreferredWidth(60);
            mainTable.getColumnModel().getColumn(11).setResizable(false);
            mainTable.getColumnModel().getColumn(11).setPreferredWidth(35);
            mainTable.getColumnModel().getColumn(12).setResizable(false);
            mainTable.getColumnModel().getColumn(12).setPreferredWidth(60);
        }

        mainPanel.add(tablePane);
        tablePane.setBounds(10, 190, 910, 227);

        add.setBackground(new java.awt.Color(169, 214, 229));
        add.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        mainPanel.add(add);
        add.setBounds(30, 560, 112, 60);

        delete.setBackground(new java.awt.Color(169, 214, 229));
        delete.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        mainPanel.add(delete);
        delete.setBounds(170, 560, 110, 60);

        logo.setIcon(new javax.swing.ImageIcon("C:\\Users\\kargo\\OneDrive\\Documents\\SEwangtransparent (1).png")); // NOI18N
        mainPanel.add(logo);
        logo.setBounds(680, 30, 201, 76);

        tfSearch.setText("Search Car ID");
        mainPanel.add(tfSearch);
        tfSearch.setBounds(650, 140, 116, 30);

        lSearch.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lSearch.setForeground(new java.awt.Color(255, 255, 255));
        lSearch.setText("Search");
        mainPanel.add(lSearch);
        lSearch.setBounds(590, 140, 60, 28);

        searchButton.setText("🔍");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        mainPanel.add(searchButton);
        searchButton.setBounds(880, 140, 40, 30);

        cbCarID.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SN", "CarID", "Class", "Model", "Make Year", "Price", "Body Style" }));
        mainPanel.add(cbCarID);
        cbCarID.setBounds(80, 140, 90, 30);

        lsortBy.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lsortBy.setForeground(new java.awt.Color(255, 255, 255));
        lsortBy.setText("Sort By");
        mainPanel.add(lsortBy);
        lsortBy.setBounds(10, 140, 57, 29);

        cbLowHigh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Low to High", "High to Low" }));
        mainPanel.add(cbLowHigh);
        cbLowHigh.setBounds(170, 140, 99, 30);

        update.setBackground(new java.awt.Color(169, 214, 229));
        update.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        mainPanel.add(update);
        update.setBounds(310, 560, 120, 60);

        updatePanel.setBackground(new java.awt.Color(1, 58, 99));

        lCarIDMain.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lCarIDMain.setForeground(new java.awt.Color(255, 255, 255));
        lCarIDMain.setText("Car ID");

        enterButton.setBackground(new java.awt.Color(169, 214, 229));
        enterButton.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        enterButton.setText("Enter");
        enterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout updatePanelLayout = new javax.swing.GroupLayout(updatePanel);
        updatePanel.setLayout(updatePanelLayout);
        updatePanelLayout.setHorizontalGroup(
            updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updatePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lCarIDMain, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfMainCarId, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(enterButton)
                .addContainerGap(22, Short.MAX_VALUE))
        );
        updatePanelLayout.setVerticalGroup(
            updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updatePanelLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lCarIDMain, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(enterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tfMainCarId, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        mainPanel.add(updatePanel);
        updatePanel.setBounds(450, 520, 370, 130);

        sort.setText("Sort");
        sort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortActionPerformed(evt);
            }
        });
        mainPanel.add(sort);
        sort.setBounds(275, 140, 80, 30);

        cbSearchBy.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CarID", "Class", "Model" }));
        mainPanel.add(cbSearchBy);
        cbSearchBy.setBounds(800, 140, 72, 30);

        getContentPane().add(mainPanel);
        mainPanel.setBounds(0, 0, 960, 640);

        homePanel.setBackground(new java.awt.Color(11, 11, 11));
        homePanel.setPreferredSize(new java.awt.Dimension(945, 700));

        homeTitleLabel.setFont(new java.awt.Font("Gill Sans Ultra Bold Condensed", 0, 100)); // NOI18N
        homeTitleLabel.setForeground(new java.awt.Color(204, 204, 204));
        homeTitleLabel.setText("SEWANG");

        homeOkButton.setBackground(new java.awt.Color(51, 51, 51));
        homeOkButton.setFont(new java.awt.Font("Gill Sans Ultra Bold Condensed", 0, 48)); // NOI18N
        homeOkButton.setForeground(new java.awt.Color(255, 255, 255));
        homeOkButton.setText("LOG IN");
        homeOkButton.setBorder(null);
        homeOkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeOkButtonActionPerformed(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(36, 36, 36));
        jLabel4.setIcon(new javax.swing.ImageIcon("C:\\Users\\kargo\\OneDrive\\Documents\\Islington\\Year2\\Data Structure\\frontviw11.png")); // NOI18N
        jLabel4.setText("jLabel4");

        homeTitleLabel1.setFont(new java.awt.Font("Gill Sans Ultra Bold Condensed", 0, 100)); // NOI18N
        homeTitleLabel1.setForeground(new java.awt.Color(204, 204, 204));
        homeTitleLabel1.setText("AUTO");

        homeTitleLabel2.setFont(new java.awt.Font("Gill Sans Ultra Bold Condensed", 0, 100)); // NOI18N
        homeTitleLabel2.setForeground(new java.awt.Color(204, 204, 204));
        homeTitleLabel2.setText("EMPIRE");

        jLabel7.setIcon(new javax.swing.ImageIcon("C:\\Users\\kargo\\OneDrive\\Documents\\Islington\\Year2\\Data Structure\\coursework\\SEwang.png")); // NOI18N
        jLabel7.setText("jLabel7");

        javax.swing.GroupLayout homePanelLayout = new javax.swing.GroupLayout(homePanel);
        homePanel.setLayout(homePanelLayout);
        homePanelLayout.setHorizontalGroup(
            homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homePanelLayout.createSequentialGroup()
                .addGroup(homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(homePanelLayout.createSequentialGroup()
                        .addGroup(homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(homePanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(homeTitleLabel))
                            .addGroup(homePanelLayout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addComponent(homeTitleLabel1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homePanelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(homeTitleLabel2)
                            .addComponent(homeOkButton, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(77, 77, 77)))
                .addGroup(homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(homePanelLayout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homePanelLayout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36))))
        );
        homePanelLayout.setVerticalGroup(
            homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homePanelLayout.createSequentialGroup()
                .addGroup(homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(homePanelLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(homeTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(homeTitleLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(homeTitleLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56)
                        .addComponent(homeOkButton, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(76, 76, 76))
                    .addGroup(homePanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(homePanel);
        homePanel.setBounds(0, 0, 0, 0);

        addPanel.setBackground(new java.awt.Color(1, 58, 99));

        cbDriveSystem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AWD", "RWD", "FWD", "4WD" }));

        lColor.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        lColor.setForeground(new java.awt.Color(255, 255, 255));
        lColor.setText("Color");

        lMakeYear.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        lMakeYear.setForeground(new java.awt.Color(255, 255, 255));
        lMakeYear.setText("Make Year");

        cbMakeYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2024" }));

        lSeater.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        lSeater.setForeground(new java.awt.Color(255, 255, 255));
        lSeater.setText("Seater");

        lPrice.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        lPrice.setForeground(new java.awt.Color(255, 255, 255));
        lPrice.setText("Price");
        lPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                lPriceKeyPressed(evt);
            }
        });

        tfClass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfClassKeyPressed(evt);
            }
        });

        tfPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfPriceKeyPressed(evt);
            }
        });

        lModel.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        lModel.setForeground(new java.awt.Color(255, 255, 255));
        lModel.setText("Model");

        formAddButton.setBackground(new java.awt.Color(169, 214, 229));
        formAddButton.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        formAddButton.setText("Add");
        formAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formAddButtonActionPerformed(evt);
            }
        });

        tfModel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfModelKeyPressed(evt);
            }
        });

        formClearButton1.setBackground(new java.awt.Color(169, 214, 229));
        formClearButton1.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        formClearButton1.setText("Clear");
        formClearButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formClearButton1ActionPerformed(evt);
            }
        });

        cbBodyType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sedan", "SUV", "Hatchback", "Cabriolet", "Coupe", "Roadster" }));

        lBody.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        lBody.setForeground(new java.awt.Color(255, 255, 255));
        lBody.setText("Body Type");

        lEngine.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        lEngine.setForeground(new java.awt.Color(255, 255, 255));
        lEngine.setText("Engine");

        cbEngine.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Petrol", "Diesel", "Electric" }));
        cbEngine.setMaximumSize(new java.awt.Dimension(32767, 30));
        cbEngine.setPreferredSize(new java.awt.Dimension(72, 30));

        lTransmission.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        lTransmission.setForeground(new java.awt.Color(255, 255, 255));
        lTransmission.setText("Transmission");

        lHp.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        lHp.setForeground(new java.awt.Color(255, 255, 255));
        lHp.setText("HP");

        formBackButton1.setBackground(new java.awt.Color(169, 214, 229));
        formBackButton1.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        formBackButton1.setText("Back");
        formBackButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formBackButton1ActionPerformed(evt);
            }
        });

        lclass.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        lclass.setForeground(new java.awt.Color(255, 255, 255));
        lclass.setText("Class");

        tfHp.setMinimumSize(new java.awt.Dimension(64, 32));
        tfHp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfHpKeyPressed(evt);
            }
        });

        lDriveSystem.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        lDriveSystem.setForeground(new java.awt.Color(255, 255, 255));
        lDriveSystem.setText("Drive System");

        gWagon.setIcon(new javax.swing.ImageIcon("C:\\Users\\kargo\\OneDrive\\Documents\\Islington\\Year2\\Data Structure\\gwagonmedium.png")); // NOI18N
        gWagon.setText("jLabel5");

        cbColor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Black", "White", "Silver", "Gray", "Red", "Blue", "Green", "Brown" }));

        updateButton.setBackground(new java.awt.Color(169, 214, 229));
        updateButton.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        logoAdd.setIcon(new javax.swing.ImageIcon("C:\\Users\\kargo\\OneDrive\\Documents\\Islington\\Year2\\Data Structure\\coursework\\SEwang.png")); // NOI18N
        logoAdd.setText("jLabel6");

        lCarID.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        lCarID.setForeground(new java.awt.Color(255, 255, 255));
        lCarID.setText("Car ID");

        tfCarID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfCarIDKeyPressed(evt);
            }
        });

        cbSeater.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2", "4", "5", "7" }));

        rbAutomatic.setForeground(new java.awt.Color(255, 255, 255));
        rbAutomatic.setText("Automatic");
        rbAutomatic.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rbAutomaticMouseClicked(evt);
            }
        });

        rbManual.setForeground(new java.awt.Color(255, 255, 255));
        rbManual.setText("Manual");
        rbManual.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rbManualMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout addPanelLayout = new javax.swing.GroupLayout(addPanel);
        addPanel.setLayout(addPanelLayout);
        addPanelLayout.setHorizontalGroup(
            addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPanelLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addPanelLayout.createSequentialGroup()
                        .addComponent(formBackButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(formClearButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addPanelLayout.createSequentialGroup()
                        .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addPanelLayout.createSequentialGroup()
                                    .addComponent(lMakeYear)
                                    .addGap(30, 30, 30)
                                    .addComponent(cbMakeYear, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(addPanelLayout.createSequentialGroup()
                                    .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lBody)
                                        .addComponent(lColor)
                                        .addComponent(lEngine))
                                    .addGap(29, 29, 29)
                                    .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(cbColor, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cbEngine, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cbBodyType, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cbSeater, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(addPanelLayout.createSequentialGroup()
                                    .addComponent(lDriveSystem)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(cbDriveSystem, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addPanelLayout.createSequentialGroup()
                                    .addComponent(lTransmission)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(rbManual, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(rbAutomatic, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(lSeater)
                            .addGroup(addPanelLayout.createSequentialGroup()
                                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lclass, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lModel, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lPrice)
                                    .addComponent(lCarID, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lHp))
                                .addGap(18, 18, 18)
                                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tfModel)
                                    .addComponent(tfClass)
                                    .addComponent(tfPrice)
                                    .addComponent(tfCarID)
                                    .addComponent(tfHp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(addPanelLayout.createSequentialGroup()
                        .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addPanelLayout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(formAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(addPanelLayout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(gWagon, javax.swing.GroupLayout.PREFERRED_SIZE, 621, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(addPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(logoAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(72, 72, 72))))
        );
        addPanelLayout.setVerticalGroup(
            addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPanelLayout.createSequentialGroup()
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lCarID, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tfCarID, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lclass, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tfClass, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tfModel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lModel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tfPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfHp, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lHp, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lSeater, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbSeater, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lBody, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbBodyType, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lColor)
                            .addComponent(cbColor, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lEngine)
                            .addComponent(cbEngine, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lMakeYear)
                            .addComponent(cbMakeYear, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lDriveSystem)
                            .addComponent(cbDriveSystem, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lTransmission)
                            .addComponent(rbAutomatic))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbManual)
                        .addGap(17, 17, 17))
                    .addGroup(addPanelLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(logoAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(gWagon, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)))
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(formBackButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(formAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(formClearButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(96, 96, 96))
        );

        getContentPane().add(addPanel);
        addPanel.setBounds(0, 0, 987, 701);

        deleteForm.setBackground(new java.awt.Color(1, 58, 99));

        tfdeleteFormCarID.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N

        deleteFormClearButton.setBackground(new java.awt.Color(0, 48, 73));
        deleteFormClearButton.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        deleteFormClearButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteFormClearButton.setText("Clear");
        deleteFormClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteFormClearButtonActionPerformed(evt);
            }
        });

        deleteFormBackButton.setBackground(new java.awt.Color(0, 48, 73));
        deleteFormBackButton.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        deleteFormBackButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteFormBackButton.setText("Back");
        deleteFormBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteFormBackButtonActionPerformed(evt);
            }
        });

        ldeleteFormSN.setFont(new java.awt.Font("Microsoft YaHei", 0, 48)); // NOI18N
        ldeleteFormSN.setForeground(new java.awt.Color(255, 255, 255));
        ldeleteFormSN.setText("Car ID");

        deleteFormDeleteButton.setBackground(new java.awt.Color(0, 48, 73));
        deleteFormDeleteButton.setFont(new java.awt.Font("Segoe UI Black", 0, 36)); // NOI18N
        deleteFormDeleteButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteFormDeleteButton.setText("Delete");
        deleteFormDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteFormDeleteButtonActionPerformed(evt);
            }
        });

        car.setIcon(new javax.swing.ImageIcon("C:\\Users\\kargo\\OneDrive\\Documents\\Islington\\Year2\\Data Structure\\mayback.png")); // NOI18N
        car.setText("jLabel8");

        logoDelete.setIcon(new javax.swing.ImageIcon("C:\\Users\\kargo\\OneDrive\\Documents\\Islington\\Year2\\Data Structure\\coursework\\SEwang.png")); // NOI18N
        logoDelete.setText("jLabel9");

        javax.swing.GroupLayout deleteFormLayout = new javax.swing.GroupLayout(deleteForm);
        deleteForm.setLayout(deleteFormLayout);
        deleteFormLayout.setHorizontalGroup(
            deleteFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deleteFormLayout.createSequentialGroup()
                .addContainerGap(77, Short.MAX_VALUE)
                .addGroup(deleteFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, deleteFormLayout.createSequentialGroup()
                        .addComponent(logoDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, deleteFormLayout.createSequentialGroup()
                        .addGroup(deleteFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(deleteFormLayout.createSequentialGroup()
                                .addGap(191, 191, 191)
                                .addComponent(ldeleteFormSN)
                                .addGap(18, 18, 18)
                                .addComponent(tfdeleteFormCarID, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, deleteFormLayout.createSequentialGroup()
                                .addComponent(car, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deleteFormDeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(deleteFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(deleteFormClearButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(deleteFormBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(46, 46, 46))))
        );
        deleteFormLayout.setVerticalGroup(
            deleteFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deleteFormLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logoDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(deleteFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ldeleteFormSN, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfdeleteFormCarID, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(89, 89, 89)
                .addGroup(deleteFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(car)
                    .addGroup(deleteFormLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(deleteFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(deleteFormLayout.createSequentialGroup()
                                .addComponent(deleteFormBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(deleteFormClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(deleteFormDeleteButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(70, Short.MAX_VALUE))
        );

        getContentPane().add(deleteForm);
        deleteForm.setBounds(0, 0, 944, 690);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void homeOkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeOkButtonActionPerformed
        homePanel.setVisible(false);
        mainPanel.setVisible(true);
    }//GEN-LAST:event_homeOkButtonActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        addPanel.setVisible(true);
        mainPanel.setVisible(false);
        formAddButton.setVisible(true);
        updateButton.setVisible(false);
        for (int y = 2024; y >= 1960; y--) {
            cbMakeYear.addItem(String.valueOf(y));
        }
    }//GEN-LAST:event_addActionPerformed
/**
 * is called when the "Add" button is clicked in the form.
 * adds a new car entry to the main table based on the user input.
 * It checks for duplicate car IDs and validates input data before adding the entry.
 *
 * @param evt The ActionEvent that triggered the method.
 */
    private void formAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formAddButtonActionPerformed
        int sn = mainTable.getRowCount() + 1;
        String carID = tfCarID.getText();
        String className = "";
        String model = "";
        String bodyType = "";
        String engine = "";
        String transmission = "";
        int hp = 0;
        String driveSystem = "";
        int makeYear = 0;
        String color = "";
        int seater = 0;
        int price = 0;
        int foundRowCount = 0;
 /**
 * Iterates through the rows of the main table to find the occurrence of a specific car ID.
 * If the car ID is found in the specified column, it increments the count of found occurrences.
 * Also, prints each row value for debugging purposes.
 */
        for (int row = 0; row < mainTable.getRowCount(); row++) {
            int col = 1;
            Object rowValue = mainTable.getValueAt(row, col);
            System.out.println(rowValue.toString());
            if (rowValue.toString().equals(carID)) {
                foundRowCount++;
                System.out.println(foundRowCount);
            }
        }
        if (foundRowCount > 0) {
            lCarID.setForeground(Color.red);
            JOptionPane.showMessageDialog(this, StringUtil.MULTIPLE_CARID);

        } else {
            try {
                carID = tfCarID.getText();
                className = tfClass.getText();
                model = tfModel.getText();
                bodyType = String.valueOf(cbBodyType.getSelectedItem());
                engine = String.valueOf(cbEngine.getSelectedItem());
                if (rbAutomatic.isSelected()) {
                    transmission = rbAutomatic.getText();
                } else if (rbManual.isSelected()) {
                    transmission = rbManual.getText();
                }
                hp = Integer.parseInt(tfHp.getText());//tfhp.getText();
                driveSystem = String.valueOf(cbDriveSystem.getSelectedItem());
                makeYear = Integer.parseInt(cbMakeYear.getSelectedItem().toString());
                color = String.valueOf(cbColor.getSelectedItem());
                seater = Integer.parseInt(cbSeater.getSelectedItem().toString());
                price = Integer.parseInt(tfPrice.getText());
                if (!carID.matches("[A-Z0-9]+")) {
                    JOptionPane.showMessageDialog(null, StringUtil.INVALID_CARID_INPUT);
                    lCarID.setForeground(Color.red);
                    return;
                }
                else if (!className.matches("[A-Z]+")) {
                    JOptionPane.showMessageDialog(null, StringUtil.INVALID_CLASS_NAME);
                    lclass.setForeground(Color.red);
                    
                    return;
                } else if (!model.matches("[a-zA-Z0-9 +]+")) {
                    JOptionPane.showMessageDialog(null, StringUtil.INVALID_MODEL);
                    lModel.setForeground(Color.red);
                    return;
                }
                else if (transmission.isEmpty()){
                    JOptionPane.showMessageDialog(null, StringUtil.TRANSMISSION_NOT_SELECTED);
                    lTransmission.setForeground(Color.red);
                    return;
                }   
                DefaultTableModel tableModel = (DefaultTableModel) mainTable.getModel();
                tableModel.addRow(new Object[]{sn, carID, className, model, bodyType, engine,
                    transmission, hp, driveSystem, color, makeYear, seater, price});
                Model data = new Model(sn, carID, className, model, bodyType,
                        engine, transmission, hp, driveSystem, color, makeYear, seater, price);
                model_arraylist.add(data); //adds data in the array list
                
                JOptionPane.showMessageDialog(null, StringUtil.ADDED_SUCESSFULLY);
                addClear();
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, StringUtil.ENTER_VALID_VALUES);  
            }
        }
    }//GEN-LAST:event_formAddButtonActionPerformed

    private void formClearButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formClearButton1ActionPerformed
        addClear();
    }//GEN-LAST:event_formClearButton1ActionPerformed
    public void addClear() {
        tfClass.setText("");
        tfModel.setText("");
        tfHp.setText("");
        tfPrice.setText("");
        tfCarID.setText("");
    }
    private void formBackButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formBackButton1ActionPerformed
        mainPanel.setVisible(true);
        addPanel.setVisible(false);
        updatePanel.setVisible(false);
        tfCarID.setVisible(true);
        lCarID.setVisible(true);
    }//GEN-LAST:event_formBackButton1ActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        mainPanel.setVisible(false);
        deleteForm.setVisible(true);
    }//GEN-LAST:event_deleteActionPerformed

    private void deleteFormClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteFormClearButtonActionPerformed
        deleteFormClear();
    }//GEN-LAST:event_deleteFormClearButtonActionPerformed
    private void deleteFormClear() {
        //clears the text field
        tfdeleteFormCarID.setText("");
    }
    private void deleteFormBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteFormBackButtonActionPerformed
        mainPanel.setVisible(true);
        deleteForm.setVisible(false);
    }//GEN-LAST:event_deleteFormBackButtonActionPerformed

    private void deleteFormDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteFormDeleteButtonActionPerformed
        String carID = tfdeleteFormCarID.getText();
        searchValue(carID);
    }//GEN-LAST:event_deleteFormDeleteButtonActionPerformed
    private void searchValue(String carID) {
        DefaultTableModel tableModel = (DefaultTableModel) mainTable.getModel();
        for (int row = 0; row < mainTable.getRowCount(); row++) {
            int column = 1;
            Object rowValue = mainTable.getValueAt(row, column);
            if (mainTable.getRowCount() == 0) {
                JOptionPane.showConfirmDialog(this, StringUtil.TABLE_EMPTY);
                return;
            }
            if (rowValue.toString().equals(carID)) {
                int confirmDialogResult = JOptionPane.showConfirmDialog(null,
                    StringUtil.CONFIRM_DELETE, tfdeleteFormCarID.getText(), JOptionPane.YES_OPTION);
                if (confirmDialogResult == JOptionPane.YES_OPTION){
                    tableModel.removeRow(row);
                    sequenceSnNumber(tableModel);
                    model_arraylist.remove(row);

                    JOptionPane.showMessageDialog(this, StringUtil.ROW_REMOVED);
                    deleteFormClear();
                    return;
                }
                else{
                    return;
                }
            }
        }
        // if car id is incorrect
        JOptionPane.showMessageDialog(this, StringUtil.INVALID_CARID);
    }
    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        updatePanel.setVisible(true);
    }//GEN-LAST:event_updateActionPerformed
    private void sequenceSnNumber(DefaultTableModel model) {
        for (int i = 0; i < model.getRowCount(); i++) {
            model.setValueAt(i + 1, i, 0);
        }
    }
    
    /**
 * This method is called when the "Update" button is clicked.
 * Updates the selected car entry with new values from the update form.
 * Displays messages for validation errors or successful updates.
 *
 * @param evt The ActionEvent that triggered the method.
 */
    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        String carID = tfCarID.getText();
        String transmission ="";
        String dClass=tfClass.getText();
        String dModel=tfModel.getText();
        String dPrice=tfPrice.getText();
        String dHp=tfHp.getText();
        if (rbAutomatic.isSelected()) {
            transmission = rbAutomatic.getText();
        } else if (rbManual.isSelected()) {
            transmission = rbManual.getText();
        }
        int foundRow = 0;
        int foundRowCount = 0;
        for (int row = 0; row < mainTable.getRowCount(); row++) {
            int col = 1;
            Object rowValue = mainTable.getValueAt(row, col);
            if (rowValue.toString().equals(carID)) {
                foundRow = row;
                foundRowCount++;
            }
        }
        if (dClass.isEmpty()) {
                    JOptionPane.showMessageDialog(null, StringUtil.CLASS_EMPTY);
                    lclass.setForeground(Color.red);
                    return;
                }
        if (dModel.isEmpty()) {
                    JOptionPane.showMessageDialog(null, StringUtil.MODEL_EMPTY);
                    lModel.setForeground(Color.red);
                    return;
                }
        if (dPrice.isEmpty()) {
                    JOptionPane.showMessageDialog(null, StringUtil.PRICE_EMPTY);
                    lPrice.setForeground(Color.red);
                    return;
                }
        if (dHp.isEmpty()) {
                    JOptionPane.showMessageDialog(null, StringUtil.HP_EMPTY);
                    lHp.setForeground(Color.red);
                    return;
                }
        if(!dClass.matches("[A-Z]+")){
            JOptionPane.showMessageDialog(null, StringUtil.ONLY_UPPERCASE);
            lclass.setForeground(Color.red);
            return;
        }
        if(!dModel.matches("[A-Za-z0-9\\s,+]+")){
            JOptionPane.showMessageDialog(null, "invalid");
            lModel.setForeground(Color.red);
            return;
        }
        if(!dHp.matches("[0-9]+")){
            JOptionPane.showMessageDialog(null, "Enter only numbers");
            lHp.setForeground(Color.red);
            return;
        }
        if(!dPrice.matches("[0-9]+")){
            JOptionPane.showMessageDialog(null, "Enter only num");
            lPrice.setForeground(Color.red);
            return;
        }
        
        if (foundRowCount > 1) {
            JOptionPane.showMessageDialog(this, StringUtil.MULTIPLE_CARID);
        } else {
            //Updates the table
            mainTable.setValueAt(tfClass.getText(), foundRow, 2);
            mainTable.setValueAt(tfModel.getText(), foundRow, 3);
            mainTable.setValueAt(cbBodyType.getSelectedItem(), foundRow, 4);
            mainTable.setValueAt(cbEngine.getSelectedItem(), foundRow, 5);
            mainTable.setValueAt(transmission, foundRow, 6);
            mainTable.setValueAt(tfHp.getText(), foundRow, 7);
            mainTable.setValueAt(cbDriveSystem.getSelectedItem(), foundRow, 8);
            mainTable.setValueAt(cbColor.getSelectedItem(), foundRow, 9);
            mainTable.setValueAt(cbMakeYear.getSelectedItem(), foundRow, 10);
            mainTable.setValueAt(cbSeater.getSelectedItem(), foundRow, 11);
            mainTable.setValueAt(tfPrice.getText(), foundRow, 12);
            int sn = model_arraylist.get(foundRow).getSn();
            String classID = tfClass.getText();
            String model = tfModel.getText();
            String bodyStyle = String.valueOf(cbBodyType.getSelectedItem());
            String engineType = String.valueOf(cbEngine.getSelectedItem());
            //String transmission = String.valueOf(cbTransmission.getSelectedItem());
            int hp = Integer.parseInt(tfHp.getText());
            String driveSystem = String.valueOf(cbDriveSystem.getSelectedItem());
            String color = String.valueOf(cbColor.getSelectedItem());
            int makeYear = Integer.parseInt(cbMakeYear.getSelectedItem().toString());
            int seater = Integer.parseInt(cbSeater.getSelectedItem().toString());
            int price = Integer.parseInt(tfPrice.getText());
            
            Model updateModel = new Model(
                    sn, carID, classID, model, bodyStyle, engineType, transmission, hp, driveSystem,
                    color, makeYear, seater, price);
            model_arraylist.set(foundRow, updateModel);
            sort();
            //message for updating successfully
            JOptionPane.showMessageDialog(this, StringUtil.UPDATED_SUCESSFULLY);
            addClear();
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void enterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterButtonActionPerformed
        // TODO add your handling code here:
        String carID = tfMainCarId.getText();
        checkCarID(carID);
    }//GEN-LAST:event_enterButtonActionPerformed

    private void sortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortActionPerformed
        sort();
    }//GEN-LAST:event_sortActionPerformed
    
 /**
 * Sorts the car entries based on the selected sorting criteria.
 * Uses the MergeSort algorithm to sort the entries and updates the JTable with the sorted data.
 */
    private void sort() {
        
        String sortByValue = String.valueOf(cbCarID.getSelectedItem());
        String highLowValue = String.valueOf(cbLowHigh.getSelectedItem());
        MergeSort mergeAlgorithm = new MergeSort();
        ArrayList<Model> sorted = mergeAlgorithm.mergeSort(model_arraylist, sortByValue);
        if (highLowValue == "High to Low") {
            ArrayList<Model> highLowList = new ArrayList<>();
            for (int i = sorted.size() - 1; i >= 0; i--) {
                highLowList.add(sorted.get(i));
            }
            sorted = highLowList;
        }
        sortedTableData(sorted);
    }

    private void sortedTableData(ArrayList<Model> model_arraylist) {
        DefaultTableModel tableModel = (DefaultTableModel) mainTable.getModel();
        DefaultTableModel model = (DefaultTableModel) mainTable.getModel();
        model.setRowCount(0);  // Clear existing rows

        for (Model rowData : model_arraylist) {
            model.addRow(new Object[]{
                rowData.getSn(),
                rowData.getCarID(),
                rowData.getClassID(),
                rowData.getModel(),
                rowData.getBodyStyle(),
                rowData.getEngineType(),
                rowData.getTransmission(),
                rowData.getHp(),
                rowData.getDriveSystem(),
                rowData.getColor(),
                rowData.getMakeYear(),
                rowData.getSeater(),
                rowData.getPrice(),});
        }
        sequenceSnNumber(tableModel);
    }
/**
 * Handles the action when the "Search" button is clicked.
 * Performs a binary search on the sorted car entries based on the selected search criteria.
 * Updates the main table with the found entries or displays a message if no entries are found.
 *
 * @param evt The ActionEvent that triggered the method.
 */    
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        MergeSort mergeAlgorithm = new MergeSort();
        BinarySearch binary = new BinarySearch();
        
        String searchByValue = cbSearchBy.getSelectedItem().toString();
        String fieldName = searchByValue;

        ArrayList<Model> sorted = mergeAlgorithm.mergeSort(model_arraylist, searchByValue);
        ArrayList<Model> foundValues = new ArrayList<>();
        // Displays sorted car IDs
        for (Model each : sorted) {
            System.out.println(each.getCarID());
        }
        String searchValue = tfSearch.getText();
        int ending = sorted.size() - 1;
        int beginning = 0;
        binary.binarySearch(sorted, foundValues, searchValue, beginning, ending, fieldName);
        if (foundValues.size() == 0) {
            JOptionPane.showMessageDialog(this, StringUtil.SEARCH_NOT_FOUND);
        } else {
            DefaultTableModel tableModel = (DefaultTableModel) mainTable.getModel();
            tableModel.setRowCount(0); 
            System.out.println(foundValues);
            for (Model foundModel : foundValues) {
                Object[] rowData = {
                    foundModel.getSn(),
                    foundModel.getCarID(),
                    foundModel.getClassID(),
                    foundModel.getModel(),
                    foundModel.getBodyStyle(),
                    foundModel.getEngineType(),
                    foundModel.getTransmission(),
                    foundModel.getHp(),
                    foundModel.getDriveSystem(),
                    foundModel.getColor(),
                    foundModel.getMakeYear(),
                    foundModel.getSeater(),
                    foundModel.getPrice()
                };
                tableModel.addRow(rowData);
            }
            mainTable.repaint();
            sequenceSnNumber(tableModel);
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void tfCarIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfCarIDKeyPressed
        lCarID.setForeground(Color.WHITE);
    }//GEN-LAST:event_tfCarIDKeyPressed

    private void tfClassKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfClassKeyPressed
        lclass.setForeground(Color.WHITE);
    }//GEN-LAST:event_tfClassKeyPressed

    private void tfModelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfModelKeyPressed
        lModel.setForeground(Color.WHITE);
    }//GEN-LAST:event_tfModelKeyPressed

    private void rbAutomaticMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbAutomaticMouseClicked
        lTransmission.setForeground(Color.WHITE);
    }//GEN-LAST:event_rbAutomaticMouseClicked

    private void rbManualMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbManualMouseClicked
        lTransmission.setForeground(Color.WHITE);
    }//GEN-LAST:event_rbManualMouseClicked

    private void lPriceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lPriceKeyPressed
        lPrice.setForeground(Color.WHITE);
    }//GEN-LAST:event_lPriceKeyPressed

    private void tfHpKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfHpKeyPressed
        lHp.setForeground(Color.WHITE);
    }//GEN-LAST:event_tfHpKeyPressed

    private void tfPriceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPriceKeyPressed
        // TODO add your handling code here:
        lPrice.setForeground(Color.WHITE);
    }//GEN-LAST:event_tfPriceKeyPressed

    /**
 * Checks if a car ID exists in the main table.
 * If found, it populates the addPanel with the car details for updating.
 * If not found, it displays an error message for an invalid car ID.
 *
 * @param carID The car ID to check in the main table.
 */
    public void checkCarID(String carID) {
        DefaultTableModel tableModel = (DefaultTableModel) mainTable.getModel();
        for (int row = 0; row < mainTable.getRowCount(); row++) {
            int column = 1;
            Object rowValue = mainTable.getValueAt(row, column);
            if (rowValue.toString().equals(carID)) {
                mainPanel.setVisible(false);
                addPanel.setVisible(true);
                formAddButton.setVisible(false);
                updateButton.setVisible(true);

                tfCarID.setText((mainTable.getValueAt(row, 1)).toString());
                tfClass.setText((mainTable.getValueAt(row, 2)).toString());
                tfModel.setText((mainTable.getValueAt(row, 3)).toString());
                tfPrice.setText((mainTable.getValueAt(row, 12)).toString());
                cbSeater.setSelectedItem((mainTable.getValueAt(row, 11)).toString());
                tfHp.setText((mainTable.getValueAt(row, 7)).toString());
                cbBodyType.setSelectedItem(mainTable.getValueAt(row, 4));
                cbColor.setSelectedItem(mainTable.getValueAt(row, 9));
                cbEngine.setSelectedItem(mainTable.getValueAt(row, 5));
                String transmisison = (String) mainTable.getValueAt(row, 6);
                cbMakeYear.setSelectedItem(mainTable.getValueAt(row, 10));
                cbDriveSystem.setSelectedItem(mainTable.getValueAt(row, 8));
                
                tfCarID.setVisible(false);
                lCarID.setVisible(false);
                
                if ("Automatic".equals(transmisison)) {
                    rbAutomatic.setSelected(true);
                } else if ("Manual".equals(transmisison)) {
                    rbManual.setSelected(true);
                }
                return;
            }
        }
        // if car id is incorrect
        JOptionPane.showMessageDialog(this, StringUtil.INVALID_CARID);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SewangAutoEmpire.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SewangAutoEmpire.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SewangAutoEmpire.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SewangAutoEmpire.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SewangAutoEmpire().setVisible(true);

            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JPanel addPanel;
    private javax.swing.JLabel car;
    private javax.swing.JComboBox<String> cbBodyType;
    private javax.swing.JComboBox<String> cbCarID;
    private javax.swing.JComboBox<String> cbColor;
    private javax.swing.JComboBox<String> cbDriveSystem;
    private javax.swing.JComboBox<String> cbEngine;
    private javax.swing.JComboBox<String> cbLowHigh;
    private javax.swing.JComboBox<String> cbMakeYear;
    private javax.swing.JComboBox<String> cbSearchBy;
    private javax.swing.JComboBox<String> cbSeater;
    private javax.swing.JButton delete;
    private javax.swing.JPanel deleteForm;
    private javax.swing.JButton deleteFormBackButton;
    private javax.swing.JButton deleteFormClearButton;
    private javax.swing.JButton deleteFormDeleteButton;
    private javax.swing.JButton enterButton;
    private javax.swing.JButton formAddButton;
    private javax.swing.JButton formBackButton1;
    private javax.swing.JButton formClearButton1;
    private javax.swing.JLabel gWagon;
    private javax.swing.JButton homeOkButton;
    private javax.swing.JPanel homePanel;
    private javax.swing.JLabel homeTitleLabel;
    private javax.swing.JLabel homeTitleLabel1;
    private javax.swing.JLabel homeTitleLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel lBody;
    private javax.swing.JLabel lCarID;
    private javax.swing.JLabel lCarIDMain;
    private javax.swing.JLabel lColor;
    private javax.swing.JLabel lDriveSystem;
    private javax.swing.JLabel lEngine;
    private javax.swing.JLabel lHp;
    private javax.swing.JLabel lMakeYear;
    private javax.swing.JLabel lModel;
    private javax.swing.JLabel lPrice;
    private javax.swing.JLabel lSearch;
    private javax.swing.JLabel lSeater;
    private javax.swing.JLabel lTransmission;
    private javax.swing.JLabel lclass;
    private javax.swing.JLabel ldeleteFormSN;
    private javax.swing.JLabel logo;
    private javax.swing.JLabel logoAdd;
    private javax.swing.JLabel logoDelete;
    private javax.swing.JLabel lsortBy;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JTable mainTable;
    private javax.swing.JRadioButton rbAutomatic;
    private javax.swing.JRadioButton rbManual;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton sort;
    private javax.swing.JScrollPane tablePane;
    private javax.swing.JTextField tfCarID;
    private javax.swing.JTextField tfClass;
    private javax.swing.JTextField tfHp;
    private javax.swing.JTextField tfMainCarId;
    private javax.swing.JTextField tfModel;
    private javax.swing.JTextField tfPrice;
    private javax.swing.JTextField tfSearch;
    private javax.swing.JTextField tfdeleteFormCarID;
    private javax.swing.JLabel title;
    private javax.swing.JButton update;
    private javax.swing.JButton updateButton;
    private javax.swing.JPanel updatePanel;
    // End of variables declaration//GEN-END:variables
}
